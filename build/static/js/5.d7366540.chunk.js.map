{"version":3,"sources":["components/TableHeader/TableHeader.component.jsx","components/List/CurrenciesList.component.jsx","pages/AddRecordPage/Table/Row.component.jsx","pages/AddRecordPage/Table/Table.component.jsx","pages/AddRecordPage/AddRecordForm/AddRecordForm.component.jsx","pages/AddRecordPage/EditRecordForm/EditRecordForm.component.jsx","components/AlertWindow/AlertWindow.component.jsx","pages/AddRecordPage/AddRecordPage.jsx","components/button/Button.component.jsx","utils/form.funtions.jsx","svg/close-outline.svg","components/Close/Close.component.jsx","components/Label/Label.component.jsx"],"names":["TableHeader","headers","theme","gap","className","map","el","i","CurrenciesList","id","value","connect","state","userID","user","currentUser","_id","typeOfTrade","buyCurrency","buyAmount","sellCurrency","sellAmount","comment","date","setHiddenUploadEdit","setEditData","style","getData","e","arr","Array","from","target","parentNode","childNodes","slice","innerHTML","objectID","data-id","type","onClick","trades","tableLoading","setNodeArr","useEffect","checkbox","document","querySelectorAll","buy","currency","amount","sell","display","dispatch","userTradeUpload","data","setHiddenUploadForm","setTradeLabel","setTableLoading","useState","setData","onChangeHandle","name","prevState","onSubmit","preventDefault","checkTradeType","sliceComment","replaceComma","checkNumberField","status","message","toLowerCase","getElementById","reset","htmlFor","required","onChange","list","placeholder","opacity","disabled","text","styles","fontSize","padding","marginRight","userTradeUpdate","editData","defaultValue","marginLeft","marginTop","AlertWindow","highlight","hideWindow","label","error","tradeLabel","userTradeDelete","hiddenUploadForm","hiddenUploadEdit","hiddenAlertWindow","setHiddenAlertWindow","nodeArr","hideLabel","deleteArr","filter","checked","dataset","length","records","forEach","some","split","workArr","count","Math","ceil","push","join","replace","res","isNaN","removeDolarSign","calculatePercentageCourseChange","buyCourse","sellCourse","round","_path","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCloseOutline","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","undefined","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ForwardRef","Close","Label","margin"],"mappings":"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","file":"static/js/5.d7366540.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = ({ headers, theme, gap }) => (\r\n    <div className={` tableHeader tableHeader-${theme}`}>\r\n        <table className= 'tableHeader__table'>\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                        gap && <th></th>\r\n                    }\r\n                    {\r\n                        headers && headers.map((el, i) => <th key={i} >{ el }</th>)\r\n                    }\r\n                </tr>\r\n            </thead>\r\n        </table>    \r\n    </div>\r\n)\r\n\r\nexport default TableHeader;","import React from 'react';\r\n\r\nconst CurrenciesList = () => (    \r\n    <datalist id=\"currencies\">\r\n        <option value=\"Bitcoin\" />\r\n        <option value=\"Ethereum\" />\r\n        <option value=\"Tether\" />\r\n        <option value=\"Binancecoin\" />\r\n        <option value=\"Ripple\" />\r\n        <option value=\"Dogecoin\" />\r\n        <option value=\"Polkadot\" />\r\n        <option value=\"Uniswap\" />\r\n        <option value=\"Internet-computer\" />\r\n        <option value=\"bitcoin-cash\" />\r\n        <option value=\"Litecoin\" />\r\n        <option value=\"Chainlink\" />\r\n        <option value=\"matic-network\" />\r\n        <option value=\"Stellar\" />\r\n        <option value=\"Binance-usd\" />\r\n        <option value=\"Ethereum-classic\" />\r\n        <option value=\"Solana\" />\r\n        <option value=\"Vechain\" />\r\n        <option value=\"Theta-token\" />\r\n        <option value=\"Wrapped-bitcoin\" />\r\n        <option value=\"Eos\" />\r\n        <option value=\"Tron\" />\r\n        <option value=\"Filecoin\" />\r\n        <option value=\"Aave\" />\r\n        <option value=\"Monero\" />\r\n        <option value=\"Dai\" />\r\n        <option value=\"Shiba-inu\" />\r\n        <option value=\"NEO\" />\r\n        <option value=\"OKB\" />\r\n        <option value=\"Kusama\" />\r\n        <option value=\"Klay-token\" />\r\n        <option value=\"Compound-ether\" />\r\n        <option value=\"Cosmos\" />\r\n        <option value=\"cDAI\" />\r\n        <option value=\"Bitcoin-cash-sv\" />\r\n        <option value=\"Maker\" />\r\n        <option value=\"pancakeswap-token\" />\r\n        <option value=\"IOTA\" />\r\n        <option value=\"Compound-usd-coin\" />\r\n        <option value=\"Crypto-com-chain\" />\r\n        <option value=\"Tezos\" />\r\n        <option value=\"Celsius-degree-token\" />\r\n        <option value=\"FTX-token\" />\r\n        <option value=\"Thorchain\" />\r\n        <option value=\"Algorand\" />\r\n        <option value=\"Huobi-token\" />\r\n        <option value=\"Terra-luna\" />\r\n        <option value=\"Leo-token\" />\r\n        <option value=\"Bittorrent-2\" />\r\n        <option value=\"SafeMoon\" />\r\n        <option value=\"Avalanche-2\" />\r\n        <option value=\"Compound-governance-token\" />\r\n        <option value=\"Decred\" />\r\n        <option value=\"Sushi\" />\r\n        <option value=\"Dash\" />\r\n        <option value=\"Hedera-hashgraph\" />\r\n        <option value=\"Havven\" />\r\n        <option value=\"TerraUSD\" />\r\n        <option value=\"Theta-fuel\" />\r\n        <option value=\"Elrond-erd-2\" />\r\n        <option value=\"NEM\" />\r\n        <option value=\"Amp-token\" />\r\n        <option value=\"Zcash\" />\r\n        <option value=\"Telcoin\" />\r\n        <option value=\"Yearn-finance\" />\r\n        <option value=\"Holotoken\" />\r\n        <option value=\"Zilliqa\" />\r\n        <option value=\"Enjincoin\" />\r\n        <option value=\"Chiliz\" />\r\n        <option value=\"True-usd\" />\r\n        <option value=\"Near\" />\r\n        <option value=\"Waves\" />\r\n        <option value=\"Helium\" />\r\n        <option value=\"Paxos-standard\" />\r\n        <option value=\"Qtum\" />\r\n        <option value=\"Staked-ether\" />\r\n        <option value=\"Zencash\" />\r\n        <option value=\"Huobi-btc\" />\r\n        <option value=\"NEXO\" />\r\n        <option value=\"Basic-attention-token\" />\r\n        <option value=\"Decentraland\" />\r\n        <option value=\"Blockstack\" />\r\n        <option value=\"Fei-protocol\" />\r\n        <option value=\"Bitcoin-gold\" />\r\n        <option value=\"Harmony\" />\r\n        <option value=\"DigiByte\" />\r\n        <option value=\"Nano\" />\r\n        <option value=\"ontology\" />\r\n        <option value=\"0x\" />\r\n        <option value=\"The-graph\" />\r\n        <option value=\"Bancor\" />\r\n        <option value=\"Omisego\" />\r\n        <option value=\"Pirate-chain\" />\r\n        <option value=\"xSUSHI\" />\r\n        <option value=\"HUSD\" />\r\n        <option value=\"Siacoin\" />\r\n        <option value=\"UMA\" />\r\n        <option value=\"WazirX\" />\r\n        <option value=\"Curve-dao-token\" />\r\n        <option value=\"Fantom\" />\r\n        <option value=\"SwissBorg\" />\r\n        <option value=\"Ankr\" />\r\n        <option value=\"Liquity-usd\" />\r\n        <option value=\"Liquity\" />\r\n        <option value=\"Gatechain-token\" />\r\n        <option value=\"Ravencoin\" />\r\n        <option value=\"Aicon\" />\r\n        <option value=\"Iostoken\" />\r\n        <option value=\"Xdce-crowd-sale\" />\r\n        <option value=\"nxm\" />\r\n        <option value=\"Arweave\" />\r\n        <option value=\"BakerySwap\" />\r\n        <option value=\"Compound-usdt\" />\r\n        <option value=\"Kucoin-shares\" />\r\n        <option value=\"Livepeer\" />\r\n        <option value=\"Flow\" />\r\n        <option value=\"Quant-network\" />\r\n        <option value=\"Ethos\" />\r\n        <option value=\"1inch\" />\r\n        <option value=\"Republic-protocol\" />\r\n        <option value=\"Reserve-rights-token\" />\r\n        <option value=\"Lisk\" />\r\n        <option value=\"Chia\" />\r\n        <option value=\"Yield-app\" />\r\n        <option value=\"streamr-datacoin\" />\r\n        <option value=\"serum\" />\r\n        <option value=\"metahero\" />\r\n        <option value=\"band-protocol\" />\r\n    </datalist>\r\n);\r\n\r\nexport default CurrenciesList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Row = ({typeOfTrade, buyCurrency, buyAmount, sellCurrency, sellAmount, comment, date, id, setHiddenUploadEdit, setEditData, userID, style}) => {\r\n    \r\n    const getData = e => {\r\n        const nodeArr = Array.from(e.target.parentNode.childNodes);\r\n        // const objectID = nodeArr[0].lastChild.dataset.id;\r\n        const arr = nodeArr.slice(1).map(el => el.innerHTML);\r\n        setEditData({\r\n            id: userID,\r\n            objectID: id,\r\n            typeOfTrade: arr[0],\r\n            buyCurrency: arr[1],\r\n            buyAmount: arr[2],\r\n            sellCurrency: arr[3],\r\n            sellAmount: arr[4],\r\n            comment: arr[5],\r\n            date: arr[6]\r\n        })\r\n        setHiddenUploadEdit(false);\r\n    };\r\n    \r\n    return (\r\n        <tr style={style}>\r\n        <td> <input data-id={id} className='table__checkbox' type='checkbox'/></td>\r\n            <td onClick={getData}>{typeOfTrade}</td>\r\n            <td onClick={getData}>{buyCurrency}</td>\r\n            <td onClick={getData}>{buyAmount}</td>\r\n            <td onClick={getData}>{sellCurrency}</td>\r\n            <td onClick={getData}>{sellAmount}</td>\r\n            <td onClick={getData}>{comment}</td>\r\n            <td onClick={getData}>{date}</td>\r\n        </tr>\r\n)};\r\n\r\nconst mapStateToProps = state => ({\r\n    userID: state.user.currentUser._id\r\n});\r\n\r\nexport default connect(mapStateToProps)(Row);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n// COMPONENTS\r\nimport Row from './Row.component';\r\nimport Spinner from '../../../components/Spinner/Spinner.component';\r\nimport TableHeader from '../../../components/TableHeader/TableHeader.component';\r\n\r\nconst Table = ({ theme, trades, setNodeArr, setHiddenUploadEdit, setEditData, tableLoading }) => {\r\n\r\n    useEffect(() => {\r\n        const checkbox = document.querySelectorAll('.table__checkbox');\r\n        setNodeArr(Array.from(checkbox));\r\n    }, [trades]);\r\n\r\n    // after submit loop wich checkbox is actually true \r\n    // if true pass his row id to the array\r\n\r\n    \r\nreturn (\r\n<div className={`table-${theme} table`}>\r\n    <TableHeader \r\n        theme={theme}\r\n        gap={true}\r\n        headers={['Type', 'Buy', 'Amount', 'Sell', 'Amount', 'Comment', 'Date']}  \r\n    />\r\n    \r\n    <div className='table__content'>\r\n    {\r\n      tableLoading ?  <Spinner /> : null\r\n    }\r\n\r\n    \r\n        <table className='table__table'>\r\n            <tbody>\r\n                {\r\n                    trades ? \r\n                    trades.map((el, i) => <Row\r\n                        typeOfTrade={el.typeOfTrade}\r\n                        buyCurrency={el.buy.currency}\r\n                        buyAmount={el.buy.amount}\r\n                        sellCurrency={el.sell.currency}\r\n                        sellAmount={el.sell.amount}\r\n                        comment={el.comment}\r\n                        date={el.date}\r\n                        id={el._id}\r\n                        key={i}\r\n                        setHiddenUploadEdit={setHiddenUploadEdit}\r\n                        setEditData={setEditData}\r\n                        style={tableLoading ? {display: \"none\"} : null}\r\n                        />)\r\n                    :\r\n                        null\r\n                }\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>    \r\n)};\r\n\r\nconst mapStateToProps = state => ({\r\n    trades: state.user.currentUser.trades,\r\n    tableLoading: state.user.tableLoading\r\n});\r\n\r\nexport default connect(mapStateToProps)(Table);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n// ACTIONS\r\nimport { userTradeUpload } from '../../../redux/user/user.actions';\r\n// UTIL FUNCTIONS\r\nimport { checkTradeType, sliceComment, replaceComma, checkNumberField } from '../../../utils/form.funtions';\r\n// COMPONENTS\r\nimport Close from '../../../components/Close/Close.component';\r\nimport Button from '../../../components/button/Button.component';\r\nimport CurrenciesList from '../../../components/List/CurrenciesList.component';\r\n\r\nconst AddRecordForm = ({ userTradeUpload, id, setHiddenUploadForm, setTradeLabel, setTableLoading }) => {\r\n   \r\n    const [data, setData] = useState({\r\n        id,\r\n        typeOfTrade: '',\r\n        buyCurrency: '',\r\n        buyAmount: null,\r\n        sellCurrency: '',\r\n        sellAmount: null,\r\n        comment: '',\r\n        date: null\r\n    });\r\n\r\n    const onChangeHandle = e => {\r\n        const { name, value } = e.target;\r\n        setData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Checking if trade type is correct\r\n        if(!checkTradeType(data.typeOfTrade)) {\r\n            setHiddenUploadForm(true);\r\n            return setTradeLabel({\r\n                status: true,\r\n                message: 'Type of trade is not correct. Please try again.'\r\n            })\r\n        };\r\n\r\n        if (data.typeOfTrade === 'Deposit') {\r\n            data.sellAmount = \"0\";\r\n            data.sellCurrency = \"-\";\r\n        };\r\n\r\n        if (data.typeOfTrade === 'Withdrawal') {\r\n            data.buyAmount = \"0\";\r\n            data.buyCurrency = '-';\r\n        }\r\n\r\n\r\n        // Slice comment every 20 characters\r\n        data.comment = sliceComment(data.comment);\r\n\r\n        // replacing , with . \r\n        data.buyAmount = replaceComma(data.buyAmount);\r\n        data.sellAmount = replaceComma(data.sellAmount);\r\n\r\n        // checking if in amount fields is number\r\n        if(checkNumberField(data.buyAmount, data.sellAmount)) {\r\n            setHiddenUploadForm(true);\r\n            return setTradeLabel({\r\n                status: true,\r\n                message: 'Please provide only numbers in amount fields.'\r\n            })\r\n        }\r\n       \r\n        data.buyAmount = data.buyAmount*1;\r\n        data.sellAmount = data.sellAmount*1;\r\n        data.buyCurrency = data.buyCurrency.toLowerCase();\r\n        data.sellCurrency = data.sellCurrency.toLowerCase();\r\n        \r\n        setTableLoading();\r\n        userTradeUpload(data);\r\n        document.getElementById('enterCoins-form').reset();\r\n        setHiddenUploadForm(true);\r\n        \r\n    }\r\n\r\nreturn (\r\n        <div className='addRecordForm'>\r\n            <div className='addRecordForm__container'>\r\n                <form onSubmit={handleSubmit} className='addRecordForm__form' id='enterCoins-form'> \r\n                    <Close onClick={() => setHiddenUploadForm(true)} />\r\n                    <h1 className='addRecordForm__text'> Add new record </h1>\r\n                    <div className='addRecordForm__type'>\r\n                        <label htmlFor='addRecordForm__type'> TYPE: </label>\r\n                        <input required onChange={onChangeHandle} name='typeOfTrade' id='addRecordForm__type' list='types' className='addRecordForm__input' type=\"text\" placeholder=\"type\" />\r\n                    </div>\r\n                        <datalist id=\"types\">\r\n                            <option value=\"Trade\" />\r\n                            <option value=\"Deposit\" />\r\n                            <option value=\"Withdrawal\" />\r\n                            <option value=\"Mining\" />\r\n                        </datalist>\r\n                    <CurrenciesList />\r\n                        \r\n                    <p className='addRecordForm__paragraph' style={data.typeOfTrade === 'Deposit' ?  null : {opacity: \"0\"}}> Use deposit if you just want provide crypto to system.  </p>\r\n\r\n                    <div className='addRecordForm__buysell'>\r\n                        <div className='addRecordForm__buy'>\r\n                            <label htmlFor='addRecordForm__input--buy'> {\r\n                                data.typeOfTrade === 'Deposit' ? \"CURRENCY: \" : \"BUY: \" \r\n                            } </label>\r\n                            <input disabled={data.typeOfTrade === 'Withdrawal' ? 'disabled' : ''} list='currencies' required onChange={onChangeHandle} name='buyCurrency' id='addRecordForm__input--buy' className='addRecordForm__input' type=\"text\" placeholder=\"currency\" />\r\n                            <input disabled={data.typeOfTrade === 'Withdrawal' ? 'disabled' : ''} required onChange={onChangeHandle} name='buyAmount' className='addRecordForm__input' type=\"text\" placeholder=\"amount\" />\r\n                        </div>\r\n                        <div className='addRecordForm__sell'>\r\n                            <label htmlFor='addRecordForm__input--sell'> {\r\n                                data.typeOfTrade === 'Deposit' ? \"USD: \" : \"SELL: \" \r\n                            } </label>\r\n                            <input  disabled={data.typeOfTrade === 'Deposit' ? 'disabled' : ''} list='currencies' required onChange={onChangeHandle} name='sellCurrency' id='addRecordForm__input--sell' className='addRecordForm__input' type=\"text\" placeholder=\"currency\" />\r\n                            <input  disabled={data.typeOfTrade === 'Deposit' ? 'disabled' : ''}   required onChange={onChangeHandle} name='sellAmount' className='addRecordForm__input' type=\"text\" placeholder=\"amount\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className='addRecordForm__comment--container'>\r\n                        <label className='addRecordForm__comment--label' htmlFor='addRecordForm__comment'>COMMENT: </label>\r\n                        <input onChange={onChangeHandle} name='comment' id='addRecordForm__comment'  className='addRecordForm__comment' /> \r\n                    </div>\r\n                    <div className='addRecordForm__footer'>\r\n                        <div className='addRecordForm__date'>\r\n                            <label htmlFor='addRecordForm__date'>DATE: </label>\r\n                            <input required onChange={onChangeHandle} name='date' id='addRecordForm__date' className='addRecordForm__input' type=\"date\" placeholder=\"date\" />\r\n                        </div>\r\n                        <Button text='APPLY' styles={{\r\n                            fontSize: \"1.5rem\",\r\n                            padding: \"1rem 2.5rem\",\r\n                            marginRight: \"3.5rem\"\r\n                        }}/> \r\n                    \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>    \r\n\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userTradeUpload: data => dispatch(userTradeUpload(data))\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    id: state.user.currentUser._id\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecordForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// ACTIONS\r\nimport { userTradeUpdate } from '../../../redux/user/user.actions';\r\n// UTIL FUNCTIONS\r\nimport { checkTradeType, sliceComment, replaceComma, checkNumberField } from '../../../utils/form.funtions';\r\n// COMPONENTS\r\nimport Button from '../../../components/button/Button.component';\r\nimport CurrenciesList from '../../../components/List/CurrenciesList.component';\r\nimport Close from '../../../components/Close/Close.component';\r\n\r\nconst EditRecordForm = ({ setHiddenUploadEdit, editData, setEditData, userTradeUpdate, setTradeLabel, setTableLoading }) => {\r\n    \r\n    let { typeOfTrade, buyCurrency, buyAmount, sellCurrency, sellAmount, comment, date} = editData;\r\n\r\n    const onChange = e => {\r\n        const { name, value } = e.target;\r\n        \r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n       e.preventDefault();\r\n\r\n          // Checking if trade type is correct\r\n          if(!checkTradeType(editData.typeOfTrade)) {\r\n            setHiddenUploadEdit(true);\r\n            return setTradeLabel({\r\n                status: true,\r\n                message: 'Type of trade is not correct. Please try again.'\r\n            })\r\n        };\r\n\r\n        if (typeOfTrade === 'Deposit') {\r\n            editData.sellAmount = \"0\";\r\n            editData.sellCurrency = \"-\";\r\n        };\r\n\r\n        if (typeOfTrade === 'Withdrawal') {\r\n            editData.buyAmount = \"0\";\r\n            editData.buyCurrency = '-';\r\n        }\r\n\r\n         // Slice comment every 20 characters\r\n         editData.comment = sliceComment(editData.comment);\r\n\r\n        // replacing , with . \r\n        editData.buyAmount = replaceComma(editData.buyAmount);\r\n        editData.sellAmount = replaceComma(editData.sellAmount);\r\n\r\n        // checking if in amount fields is number\r\n        if(checkNumberField(editData.buyAmount, editData.sellAmount)) {\r\n            setHiddenUploadEdit(true);\r\n            return setTradeLabel({\r\n                status: true,\r\n                message: 'Please provide only numbers in amount fields.'\r\n            })\r\n        }\r\n\r\n        editData.buyCurrency = editData.buyCurrency.toLowerCase();\r\n        editData.sellCurrency = editData.sellCurrency.toLowerCase();\r\n       \r\n       setTableLoading()\r\n       userTradeUpdate(editData);\r\n       setHiddenUploadEdit(true);\r\n    }\r\n\r\n    return (\r\n    <div className='editRecordForm'>\r\n        <div className='editRecordForm__container'>\r\n            <form onSubmit={handleSubmit} className='editRecordForm__form' id='editRecordForm-form'> \r\n                <Close onClick={() => setHiddenUploadEdit(true)} />\r\n                <h1 className='editRecordForm__header'>Edit Record</h1>\r\n                <div className='editRecordForm__type'>\r\n                    <label htmlFor='editRecordForm__type'> TYPE: </label>\r\n                    <input onChange={onChange} defaultValue={typeOfTrade} required name='typeOfTrade' id='editRecordForm__type' list='types__edit' className='editRecordForm__input' type=\"text\" placeholder=\"type\" />\r\n                </div>\r\n                <datalist id=\"types__edit\">\r\n                    <option value=\"Trade\" />\r\n                    <option value=\"Deposit\" />\r\n                    <option value=\"Withdrawal\" />\r\n                    <option value=\"Mining\" />\r\n                </datalist>\r\n                <CurrenciesList />\r\n\r\n                <div className='editRecordForm__buysell'>\r\n                <div className='editRecordForm__buy'>\r\n                    <label htmlFor='editRecordForm__input--buy'>BUY: </label>\r\n                    <input disabled={typeOfTrade === 'Withdrawal' ? 'disabled' : ''} list='currencies' onChange={onChange} defaultValue={buyCurrency} required name='buyCurrency' id='editRecordForm__input--buy' className='editRecordForm__input' type=\"text\" placeholder=\"currency\" />\r\n                    <input disabled={typeOfTrade === 'Withdrawal' ? 'disabled' : ''} onChange={onChange} defaultValue={buyAmount} required name='buyAmount' className='editRecordForm__input' type=\"text\" placeholder=\"amount\" />\r\n                </div>\r\n                <div className='editRecordForm__sell'>\r\n                    <label htmlFor='editRecordForm__input--sell'>SELL: </label>\r\n                    <input disabled={typeOfTrade === 'Deposit' ? 'disabled' : ''} list='currencies' onChange={onChange} defaultValue={sellCurrency} required name='sellCurrency' id='editRecordForm__input--sell' className='editRecordForm__input' type=\"text\" placeholder=\"currency\" />\r\n                    <input disabled={typeOfTrade === 'Deposit' ? 'disabled' : ''} onChange={onChange} defaultValue={sellAmount} required name='sellAmount' className='editRecordForm__input' type=\"text\" placeholder=\"amount\" />\r\n                </div>\r\n                </div>\r\n                <div className='editRecordForm__comment'>\r\n                    <label className='editRecordForm__comment--label' htmlFor='editRecordForm__comment'>COMMENT: </label>\r\n                    <input onChange={onChange} defaultValue={comment} name='comment' id='editRecordForm__comment'  className='editRecordForm__comment--input editRecordForm__input' /> \r\n                </div>\r\n                <div className='editRecordForm__footer'>\r\n                    <div className='editRecordForm__date'>\r\n                        <label htmlFor='editRecordForm__date'>DATE: </label>\r\n                        <input onChange={onChange} defaultValue={date} required name='date' id='editRecordForm__date' className='editRecordForm__input ' type=\"date\" placeholder=\"date\" />\r\n                    </div>\r\n                    <Button type='submit' text='APPLY' styles={{\r\n                        padding: '1rem 3rem',\r\n                        marginLeft: '10rem',\r\n                        marginTop: '2rem'\r\n                    }}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userTradeUpdate: data => dispatch(userTradeUpdate(data))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(EditRecordForm);","import React from 'react';\r\nimport Button from '../button/Button.component';\r\nimport { ReactComponent as Close} from '../../svg/close-outline.svg';\r\n\r\nconst AlertWindow = ({ text, highlight, onClick, hideWindow }) => {\r\n\r\n    const handleConfirm = () => {\r\n        onClick();\r\n        hideWindow(true);\r\n\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className='alertWindow'>\r\n            <div className='alertWindow__container'>\r\n                <div className='close'>\r\n                    <Close onClick={() => hideWindow(true)} className='close--icon'/>\r\n                </div>\r\n                <p className='alertWindow__text'> {text} </p>\r\n                <div className='alertWindow__buttons'>\r\n                    <Button onClick={() => hideWindow(true)} text={'CANCEL'} />\r\n                    <Button onClick={handleConfirm} text={'CONFIRM'} /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlertWindow;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n// ACTIONS\r\nimport { userTradeDelete, setTableLoading } from '../../redux/user/user.actions';\r\nimport { setTradeLabel } from '../../redux/error/error.actions';\r\n// SPECIFIED COMPONENTS\r\nimport Table from './Table/Table.component';\r\nimport AddRecordForm from './AddRecordForm/AddRecordForm.component';\r\nimport EditRecordForm from './EditRecordForm/EditRecordForm.component';\r\n// OTHER COMPONENTS\r\nimport Button from '../../components/button/Button.component';\r\nimport AlertWindow from '../../components/AlertWindow/AlertWindow.component'\r\nimport Label from '../../components/Label/Label.component';\r\n\r\n\r\nconst AddRecordPage = ({ theme, userTradeDelete, id, label, setTradeLabel, setTableLoading }) => {\r\n    const [hiddenUploadForm, setHiddenUploadForm] = useState(true);\r\n    const [hiddenUploadEdit, setHiddenUploadEdit] = useState(true);\r\n    const [hiddenAlertWindow, setHiddenAlertWindow] = useState(true);\r\n    const [nodeArr, setNodeArr] = useState([]);\r\n    const [editData, setEditData] = useState({\r\n        objectID: null,\r\n        typeOfTrade: '',\r\n        buyCurrency: '',\r\n        buyAmount: null,\r\n        sellCurrency: '',\r\n        sellAmount: null,\r\n        comment: '',\r\n        date: null\r\n    })\r\n\r\n\r\n    const deleteRecords = () => {\r\n        const deleteArr = nodeArr.filter(el => el.checked === true).map(el => el.dataset.id);\r\n        if (deleteArr.length === 0) return;\r\n        setTableLoading();\r\n        userTradeDelete({\r\n            id,\r\n            records: deleteArr\r\n        });\r\n        nodeArr.forEach(el => el.checked = false)\r\n    }\r\n    \r\n    return (\r\n    <div className={`addRecordPage-${theme} addRecordPage`}>\r\n        {\r\n            label.status ? <Label status='error' message={label.message} hideLabel={() => setTradeLabel({status: false, message: ''})} /> : null\r\n        }\r\n        {\r\n            hiddenUploadForm ? null : <AddRecordForm setTableLoading={setTableLoading} setTradeLabel={setTradeLabel} setHiddenUploadForm={setHiddenUploadForm} /> \r\n        }\r\n        {\r\n            hiddenUploadEdit ? null :  <EditRecordForm setTableLoading={setTableLoading} setTradeLabel={setTradeLabel} setHiddenUploadEdit={setHiddenUploadEdit} editData={editData} setEditData={setEditData} />\r\n        }\r\n        {\r\n            hiddenAlertWindow ? null :  <AlertWindow onClick={deleteRecords} hideWindow={setHiddenAlertWindow} text={'Are you sure, that you want to delete this records? '} />\r\n        }\r\n\r\n        <div className='addRecordPage__buttons'>\r\n            <Button onClick={() => setHiddenUploadForm(false)} text='Add new record' />    \r\n            <Button onClick={() => setHiddenAlertWindow(false)} text='Delete records' /> \r\n        </div>\r\n            <Table theme={theme} setNodeArr={setNodeArr} setHiddenUploadEdit={setHiddenUploadEdit} setEditData={setEditData} id={id}/>\r\n             \r\n    </div>    \r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userTradeDelete: data => dispatch(userTradeDelete(data)),\r\n    setTradeLabel: data => dispatch(setTradeLabel(data)),\r\n    setTableLoading: () => dispatch(setTableLoading()) \r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    id: state.user.currentUser._id,\r\n    theme: state.user.theme,\r\n    label: state.error.tradeLabel\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecordPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Button = ({theme, onClick, text, styles}) => (\r\n    <button style={styles} onClick={onClick} className={`button-${theme} button`}> {text} </button>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    theme: state.user.theme\r\n});\r\n\r\nexport default connect(mapStateToProps)(Button);","\r\nexport const checkTradeType = (typeOfTrade) => {\r\n    const tradeTypes = ['Trade', 'Deposit', 'Withdrawal', 'Mining', 'Other'];\r\n\r\n    if(!tradeTypes.some(el => el === typeOfTrade)) {\r\n\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const sliceComment = (comment) => {\r\n        comment = comment.split(' ').map(el => {\r\n        if (el.length > 20) {\r\n            const maxCharactersInOneLine = 15;\r\n            const workArr = [];\r\n            const count = Math.ceil(el.length / maxCharactersInOneLine);\r\n            for (let i = 0; i < count; i++) {\r\n                i + 1 === count ?\r\n                workArr.push(el.slice(i*maxCharactersInOneLine, (i+1)*maxCharactersInOneLine)) :\r\n                workArr.push(el.slice(i*maxCharactersInOneLine, (i+1)*maxCharactersInOneLine) + ' ');\r\n            }\r\n            return workArr.join('')\r\n        }\r\n        return el;\r\n    }).join(' ');\r\n\r\n    return comment;\r\n};\r\n\r\nexport const replaceComma = data => {\r\n        return data.replace(',','.');\r\n};\r\n\r\nexport const checkNumberField = (...data) => {\r\n    const res = data.some(el => isNaN(el));\r\n    return res;\r\n};\r\n\r\nexport const removeDolarSign = data => {\r\n    const res = data.replace(/\\$/g, '');\r\n    return res;\r\n};\r\n\r\nexport const calculatePercentageCourseChange = (buyCourse, sellCourse) => {\r\n     return (Math.round(((sellCourse / buyCourse)*100 - 100)*100)) / 100\r\n};","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseOutline(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"ionicon\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Close\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 32,\n    d: \"M368 368L144 144M368 144L144 368\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseOutline);\nexport default __webpack_public_path__ + \"static/media/close-outline.a22b61b1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as CloseIcon} from '../../svg/close-outline.svg';\r\n\r\nconst Close = ({ onClick }) => (\r\n    <div className='close'>\r\n        <CloseIcon className='close--icon' onClick={onClick} />\r\n    </div>\r\n); \r\n\r\nexport default Close;","import React from 'react';\r\nimport { ReactComponent as Close} from '../../svg/close-outline.svg';\r\n\r\nconst Label = ({status, message, hideLabel}) => {\r\n    \r\n    return <div className={`label label__${status}`}>\r\n    <div  className='close'>\r\n                <Close onClick={hideLabel} style={{margin: '.2rem'}} className='close--icon' />\r\n            </div>\r\n    <p className='label__text'> { message } </p> </div>\r\n};\r\n\r\nexport default Label;"],"sourceRoot":""}