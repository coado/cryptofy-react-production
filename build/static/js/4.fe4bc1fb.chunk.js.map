{"version":3,"sources":["components/TableHeader/TableHeader.component.jsx","components/List/CurrenciesList.component.jsx","svg/rocket-outline.svg","pages/WalletTrackerPage/Spot/Table/SpotTableRow.component.jsx","pages/WalletTrackerPage/Spot/Table/SpotTable.component.jsx","pages/WalletTrackerPage/Spot/Form/SpotAddRecordForm.component.jsx","pages/WalletTrackerPage/Spot/Form/SpotUpdateRecordForm.component.jsx","pages/WalletTrackerPage/Futures/Table/FuturesTableRow.component.jsx","pages/WalletTrackerPage/Futures/Table/FuturesTable.component.jsx","pages/WalletTrackerPage/Futures/Form/FuturesAddRecordForm.component.jsx","pages/WalletTrackerPage/Futures/Form/FuturesUpdateRecordForm.component.jsx","pages/WalletTrackerPage/StatsTable/StatsTable.component.jsx","pages/WalletTrackerPage/ChartContainer/ChartContainer.component.jsx","pages/WalletTrackerPage/StatisticCard/StatisticCard.component.jsx","pages/WalletTrackerPage/WalletTrackerPage.component.jsx","components/button/Button.component.jsx","utils/form.funtions.jsx","svg/close-outline.svg","components/Close/Close.component.jsx","components/LineChart/LineChart.component.jsx","components/Label/Label.component.jsx"],"names":["TableHeader","headers","theme","gap","className","map","el","i","CurrenciesList","id","value","_path","_path2","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRocketOutline","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","undefined","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ForwardRef","SpotTableRow","percentageCourseChange","rocketsNumber","style","setEditData","setHiddenUpdateForm","buyAmount","buyCourse","buyCurrency","buyDate","profit","sellCourse","sellDate","rockets","push","getData","e","nodeArr","Array","from","parentNode","childNodes","arr","slice","innerHTML","textContent","prevState","objectID","removeDolarSign","data-id","type","onClick","color","connect","state","spot","user","currentUser","transactions","spotTableLoading","averageProfit","setNodeArr","useEffect","checkbox","document","querySelectorAll","rocketsReference","Math","round","_id","display","floor","dispatch","userSpotUpload","data","setSpotTableLoading","setWalletTrackerLabel","hideForm","useState","setData","handleChange","name","onSubmit","preventDefault","replaceComma","checkNumberField","status","message","calculatePercentageCourseChange","htmlFor","autoComplete","list","required","onChange","placeholder","text","styles","marginTop","marginBottom","userSpotEdit","editData","sellAmount","defaultValue","FuturesTableRow","entry","laverage","typeOfFuture","contract","date","prevStatus","fontWeight","fontSize","futures","futuresTableLoading","userFutureUpload","setFuturesTableLoading","toLowerCase","userFutureEdit","StatsTable","spotData","futureData","averageProfitPerOneTransaction","highestProfit","lowestProfit","firstTrade","lastTrade","averageTransactionsPerMonth","highestTransactionsAmountInMonth","highestTransactionsDate","bestMonth","worstMonth","ChartContainer","tickMark","header","width","height","times","profitTimes","efficiencyTimes","values","profitValues","efficiencyValues","chartColor","StatisticCard","dolar","backgroundColor","React","memo","label","error","walletTrackerLabel","walletTrackerTransactionData","walletTrackerFuturesData","userSpotDelete","userFutureDelete","spotUploadForm","setSpotUploadForm","spotUpdateForm","setSpotUpdateForm","futuresUploadForm","setFuturesUploadForm","futuresUpdateForm","setFuturesUpdateForm","nodeArrTransactions","setNodeArrTransactions","nodeArrFutures","setNodeArrFutures","editTransactionData","setEditTransactionData","editFutureData","setEditFutureData","hideLabel","deleteArr","filter","checked","dataset","forEach","records","totalProfit","totalTransactionsAmount","monthlyProfitChartdata","cashFlow","checkTradeType","typeOfTrade","some","sliceComment","comment","split","workArr","count","ceil","join","replace","res","isNaN","SvgCloseOutline","Close","LineChart","themeChartColor","themeTicksColor","themeBorderColor","headerColor","beginAtZero","defaults","borderColor","elements","point","pointStyle","plugins","legend","labels","datasets","pointBackgroundColor","borderWidth","tension","options","responsive","scales","x","ticks","y","callback","index","Label","margin"],"mappings":"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","file":"static/js/4.fe4bc1fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = ({ headers, theme, gap }) => (\r\n    <div className={` tableHeader tableHeader-${theme}`}>\r\n        <table className= 'tableHeader__table'>\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                        gap && <th></th>\r\n                    }\r\n                    {\r\n                        headers && headers.map((el, i) => <th key={i} >{ el }</th>)\r\n                    }\r\n                </tr>\r\n            </thead>\r\n        </table>    \r\n    </div>\r\n)\r\n\r\nexport default TableHeader;","import React from 'react';\r\n\r\nconst CurrenciesList = () => (    \r\n    <datalist id=\"currencies\">\r\n        <option value=\"Bitcoin\" />\r\n        <option value=\"Ethereum\" />\r\n        <option value=\"Tether\" />\r\n        <option value=\"Binancecoin\" />\r\n        <option value=\"Ripple\" />\r\n        <option value=\"Dogecoin\" />\r\n        <option value=\"Polkadot\" />\r\n        <option value=\"Uniswap\" />\r\n        <option value=\"Internet-computer\" />\r\n        <option value=\"bitcoin-cash\" />\r\n        <option value=\"Litecoin\" />\r\n        <option value=\"Chainlink\" />\r\n        <option value=\"matic-network\" />\r\n        <option value=\"Stellar\" />\r\n        <option value=\"Binance-usd\" />\r\n        <option value=\"Ethereum-classic\" />\r\n        <option value=\"Solana\" />\r\n        <option value=\"Vechain\" />\r\n        <option value=\"Theta-token\" />\r\n        <option value=\"Wrapped-bitcoin\" />\r\n        <option value=\"Eos\" />\r\n        <option value=\"Tron\" />\r\n        <option value=\"Filecoin\" />\r\n        <option value=\"Aave\" />\r\n        <option value=\"Monero\" />\r\n        <option value=\"Dai\" />\r\n        <option value=\"Shiba-inu\" />\r\n        <option value=\"NEO\" />\r\n        <option value=\"OKB\" />\r\n        <option value=\"Kusama\" />\r\n        <option value=\"Klay-token\" />\r\n        <option value=\"Compound-ether\" />\r\n        <option value=\"Cosmos\" />\r\n        <option value=\"cDAI\" />\r\n        <option value=\"Bitcoin-cash-sv\" />\r\n        <option value=\"Maker\" />\r\n        <option value=\"pancakeswap-token\" />\r\n        <option value=\"IOTA\" />\r\n        <option value=\"Compound-usd-coin\" />\r\n        <option value=\"Crypto-com-chain\" />\r\n        <option value=\"Tezos\" />\r\n        <option value=\"Celsius-degree-token\" />\r\n        <option value=\"FTX-token\" />\r\n        <option value=\"Thorchain\" />\r\n        <option value=\"Algorand\" />\r\n        <option value=\"Huobi-token\" />\r\n        <option value=\"Terra-luna\" />\r\n        <option value=\"Leo-token\" />\r\n        <option value=\"Bittorrent-2\" />\r\n        <option value=\"SafeMoon\" />\r\n        <option value=\"Avalanche-2\" />\r\n        <option value=\"Compound-governance-token\" />\r\n        <option value=\"Decred\" />\r\n        <option value=\"Sushi\" />\r\n        <option value=\"Dash\" />\r\n        <option value=\"Hedera-hashgraph\" />\r\n        <option value=\"Havven\" />\r\n        <option value=\"TerraUSD\" />\r\n        <option value=\"Theta-fuel\" />\r\n        <option value=\"Elrond-erd-2\" />\r\n        <option value=\"NEM\" />\r\n        <option value=\"Amp-token\" />\r\n        <option value=\"Zcash\" />\r\n        <option value=\"Telcoin\" />\r\n        <option value=\"Yearn-finance\" />\r\n        <option value=\"Holotoken\" />\r\n        <option value=\"Zilliqa\" />\r\n        <option value=\"Enjincoin\" />\r\n        <option value=\"Chiliz\" />\r\n        <option value=\"True-usd\" />\r\n        <option value=\"Near\" />\r\n        <option value=\"Waves\" />\r\n        <option value=\"Helium\" />\r\n        <option value=\"Paxos-standard\" />\r\n        <option value=\"Qtum\" />\r\n        <option value=\"Staked-ether\" />\r\n        <option value=\"Zencash\" />\r\n        <option value=\"Huobi-btc\" />\r\n        <option value=\"NEXO\" />\r\n        <option value=\"Basic-attention-token\" />\r\n        <option value=\"Decentraland\" />\r\n        <option value=\"Blockstack\" />\r\n        <option value=\"Fei-protocol\" />\r\n        <option value=\"Bitcoin-gold\" />\r\n        <option value=\"Harmony\" />\r\n        <option value=\"DigiByte\" />\r\n        <option value=\"Nano\" />\r\n        <option value=\"ontology\" />\r\n        <option value=\"0x\" />\r\n        <option value=\"The-graph\" />\r\n        <option value=\"Bancor\" />\r\n        <option value=\"Omisego\" />\r\n        <option value=\"Pirate-chain\" />\r\n        <option value=\"xSUSHI\" />\r\n        <option value=\"HUSD\" />\r\n        <option value=\"Siacoin\" />\r\n        <option value=\"UMA\" />\r\n        <option value=\"WazirX\" />\r\n        <option value=\"Curve-dao-token\" />\r\n        <option value=\"Fantom\" />\r\n        <option value=\"SwissBorg\" />\r\n        <option value=\"Ankr\" />\r\n        <option value=\"Liquity-usd\" />\r\n        <option value=\"Liquity\" />\r\n        <option value=\"Gatechain-token\" />\r\n        <option value=\"Ravencoin\" />\r\n        <option value=\"Aicon\" />\r\n        <option value=\"Iostoken\" />\r\n        <option value=\"Xdce-crowd-sale\" />\r\n        <option value=\"nxm\" />\r\n        <option value=\"Arweave\" />\r\n        <option value=\"BakerySwap\" />\r\n        <option value=\"Compound-usdt\" />\r\n        <option value=\"Kucoin-shares\" />\r\n        <option value=\"Livepeer\" />\r\n        <option value=\"Flow\" />\r\n        <option value=\"Quant-network\" />\r\n        <option value=\"Ethos\" />\r\n        <option value=\"1inch\" />\r\n        <option value=\"Republic-protocol\" />\r\n        <option value=\"Reserve-rights-token\" />\r\n        <option value=\"Lisk\" />\r\n        <option value=\"Chia\" />\r\n        <option value=\"Yield-app\" />\r\n        <option value=\"streamr-datacoin\" />\r\n        <option value=\"serum\" />\r\n        <option value=\"metahero\" />\r\n        <option value=\"band-protocol\" />\r\n    </datalist>\r\n);\r\n\r\nexport default CurrenciesList;","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRocketOutline(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"ionicon\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Rocket\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M461.81 53.81a4.4 4.4 0 00-3.3-3.39c-54.38-13.3-180 34.09-248.13 102.17a294.9 294.9 0 00-33.09 39.08c-21-1.9-42-.3-59.88 7.5-50.49 22.2-65.18 80.18-69.28 105.07a9 9 0 009.8 10.4l81.07-8.9a180.29 180.29 0 001.1 18.3 18.15 18.15 0 005.3 11.09l31.39 31.39a18.15 18.15 0 0011.1 5.3 179.91 179.91 0 0018.19 1.1l-8.89 81a9 9 0 0010.39 9.79c24.9-4 83-18.69 105.07-69.17 7.8-17.9 9.4-38.79 7.6-59.69a293.91 293.91 0 0039.19-33.09c68.38-68 115.47-190.86 102.37-247.95zM298.66 213.67a42.7 42.7 0 1160.38 0 42.65 42.65 0 01-60.38 0z\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 32\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M109.64 352a45.06 45.06 0 00-26.35 12.84C65.67 382.52 64 448 64 448s65.52-1.67 83.15-19.31A44.73 44.73 0 00160 402.32\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 32\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRocketOutline);\nexport default __webpack_public_path__ + \"static/media/rocket-outline.0940735b.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\nimport { ReactComponent as Rocket} from '../../../../svg/rocket-outline.svg';\r\nimport { removeDolarSign } from '../../../../utils/form.funtions';\r\n\r\n\r\nconst SpotTableRow = ({ theme, percentageCourseChange, rocketsNumber, style, setEditData, setHiddenUpdateForm, id, buyAmount, buyCourse, buyCurrency, buyDate, profit, sellCourse, sellDate}) => {\r\n    let rockets = [];\r\n\r\n        \r\n\r\n        for (let i = 0; i < rocketsNumber; i++) {\r\n            rockets.push(<Rocket key={i} className='spotTable--rocketIcon' />)\r\n        }\r\n  \r\n\r\n\r\n    const getData = e => {\r\n        let nodeArr = Array.from(e.target.parentNode.childNodes);\r\n        \r\n        if (nodeArr.length < 9) nodeArr = Array.from(e.target.parentNode.parentNode.childNodes)\r\n        if (nodeArr.length < 9) nodeArr = Array.from(e.target.parentNode.parentNode.parentNode.childNodes)\r\n        if (nodeArr.length < 9) nodeArr = Array.from(e.target.parentNode.parentNode.parentNode.parentNode.childNodes)\r\n        \r\n        const arr = nodeArr.slice(1,9).map(el => el.innerHTML);\r\n        if (arr[4]) {\r\n            arr[4] = nodeArr[5].childNodes[0].textContent;\r\n        }\r\n        \r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            objectID: id,\r\n            buyCurrency: arr[0],\r\n            buyAmount: arr[1],\r\n            buyCourse: removeDolarSign(arr[2]),\r\n            buyDate: arr[3],\r\n            sellCourse: removeDolarSign(arr[4]),\r\n            profit: removeDolarSign(arr[5]),\r\n            sellDate: arr[6]\r\n\r\n        }))\r\n        setHiddenUpdateForm(false);\r\n    }\r\n    \r\n    return (\r\n    <tr className={`spotTable__tr-${theme}`} style={style} >\r\n        <td> <input  data-id={id} className='spotTable__checkbox' type='checkbox'/></td>\r\n        <td onClick={getData} >{buyCurrency}</td>\r\n        <td onClick={getData}>{buyAmount}</td>\r\n        <td onClick={getData}>{buyCourse}$</td>\r\n        <td onClick={getData}>{buyDate}</td>\r\n        <td onClick={getData}>{\r\n            sellCourse === null ? null : `${sellCourse}$`\r\n        }\r\n        {\r\n            percentageCourseChange ?\r\n            <span  style={{color: percentageCourseChange >= 0 ? '#32ff7e' : '#ff3838'}} className='spotTable--percentageCourse'>{percentageCourseChange >= 0 ? `+${percentageCourseChange}%` : `${percentageCourseChange}%`}</span>\r\n            :\r\n            null\r\n        }\r\n        </td>\r\n        <td style={{color: profit >= 0 ? '#32ff7e' : '#ff3838'}} onClick={getData}>\r\n        {\r\n         profit === null ? null : `${profit}$`\r\n        }\r\n        </td>\r\n        <td onClick={getData}>{sellDate}</td>\r\n        <td onClick={getData}> \r\n            <div className='spotTable--rocketContainer'>\r\n            {\r\n                rockets.map(el => el)\r\n            }\r\n            </div>\r\n        </td>\r\n    </tr>\r\n)};\r\n\r\nexport default SpotTableRow;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Spinner from '../../../../components/Spinner/Spinner.component';\r\nimport SpotTableRow from './SpotTableRow.component';\r\nimport TableHeader from '../../../../components/TableHeader/TableHeader.component';\r\n\r\n\r\nconst SpotTable = ({ theme, averageProfit, spotTableLoading, setEditData, setHiddenUpdateForm, spot, setNodeArr }) => {\r\n    \r\n    useEffect(() => {\r\n        const checkbox = document.querySelectorAll('.spotTable__checkbox');\r\n        setNodeArr(Array.from(checkbox))\r\n    }, [spot])\r\n    \r\n    let rocketsReference = Math.round(((averageProfit + (averageProfit / 3)) / 3));\r\n    \r\n    return (\r\n        <div className={`spotTable-${theme} spotTable`}>\r\n        <TableHeader \r\n            theme={theme} \r\n            gap={true}\r\n            headers={['Currency', 'Amount', 'Course', 'Date', 'Course', 'Profit', 'Date', 'Rockets']} \r\n        />\r\n\r\n        <div className='spotTable__content'>\r\n        {\r\n            spotTableLoading ? <Spinner /> : null\r\n        }    \r\n        \r\n        <table className='spotTable__table'>\r\n            <tbody>\r\n            {\r\n                spot ? \r\n                spot.map((el, i) => <SpotTableRow \r\n                                        id={el._id}\r\n                                        buyAmount={el.buyAmount}\r\n                                        buyCourse={el.buyCourse}\r\n                                        buyCurrency={el.buyCurrency}\r\n                                        buyDate={el.buyDate}\r\n                                        profit={el.profit}\r\n                                        sellCourse={el.sellCourse}\r\n                                        percentageCourseChange={el.percentageCourseChange}\r\n                                        sellDate={el.sellDate}\r\n                                        key={i}\r\n                                        setHiddenUpdateForm={setHiddenUpdateForm}\r\n                                        setEditData={setEditData}\r\n                                        theme={theme}\r\n                                        style={spotTableLoading ? {display: \"none\"} : null}\r\n                                        rocketsNumber={ Math.floor(el.profit / rocketsReference) > 3 ? 3 : Math.floor(el.profit / rocketsReference)}\r\n                                        />)\r\n                : null\r\n            }\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    </div>\r\n)};\r\n\r\nconst mapStateToProps = state => ({\r\n    spot: state.user.currentUser.transactions,\r\n    spotTableLoading: state.user.spotTableLoading\r\n});\r\n\r\nexport default connect(mapStateToProps)(SpotTable);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n// UTIL FUNCTIONS\r\nimport { replaceComma, checkNumberField, calculatePercentageCourseChange } from '../../../../utils/form.funtions';\r\n// ACTIONS\r\nimport { userSpotUpload } from '../../../../redux/user/user.actions';\r\n// COMPONENTS\r\nimport Button from '../../../../components/button/Button.component';\r\nimport CurrenciesList from '../../../../components/List/CurrenciesList.component';\r\nimport Close from '../../../../components/Close/Close.component';\r\n\r\n\r\nconst SpotAddRecordForm  = ({ theme, setSpotTableLoading, setWalletTrackerLabel, hideForm, userSpotUpload, id }) => {\r\n   \r\n    const [data, setData] = useState({\r\n        id,\r\n        buyCurrency: '',\r\n        buyAmount: null,\r\n        buyCourse: null,\r\n        buyDate: null,\r\n        sellCourse: null,\r\n        sellDate: null,\r\n        profit: null,\r\n        percentageCourseChange: null\r\n    });\r\n\r\n\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        setData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (data.sellCourse) data.sellCourse = replaceComma(data.sellCourse);\r\n        if (data.profit)  data.profit = replaceComma(data.profit);\r\n\r\n        if (data.buyAmount) data.buyAmount = replaceComma(data.buyAmount);\r\n        if (data.buyCourse) data.buyCourse = replaceComma(data.buyCourse);\r\n\r\n        if(checkNumberField(data.buyAmount, data.buyCourse, data.sellCourse, data.profit)) {\r\n            return setWalletTrackerLabel({\r\n                status: true,\r\n                message: 'Provide only numbers in amount, profit and course fields. '\r\n            })\r\n        }\r\n\r\n        if (data.buyCourse && data.sellCourse) {\r\n            data.percentageCourseChange = calculatePercentageCourseChange(data.buyCourse, data.sellCourse);\r\n        };\r\n\r\n        setSpotTableLoading();\r\n        userSpotUpload(data);\r\n        hideForm();\r\n\r\n\r\n    };\r\n\r\n    return (\r\n    <div className={`spotForm-${theme} spotForm`}>\r\n        <div className='spotForm__container'>\r\n            <form onSubmit={handleSubmit} >\r\n                <Close onClick={hideForm} />\r\n                    <h1 className='spotForm__header'> Add new record </h1>\r\n                <div className='spotForm__box'>\r\n                    <div className='spotForm__buy'>\r\n                        <p className='spotForm__paragraph'>Buying</p>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--1'> CURRENCY:  </label>\r\n                            <input autoComplete='off' list='currencies' required onChange={handleChange} name='buyCurrency' type='text' placeholder='currency' id='spotForm__input--1' className='spotForm__input' />\r\n                            <CurrenciesList />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--2'> AMOUNT:  </label>\r\n                            <input autoComplete='off' required onChange={handleChange} name='buyAmount' type='text' placeholder='amount' id='spotForm__input--2' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--3'> COURSE:  </label>\r\n                            <input autoComplete='off' required onChange={handleChange} name='buyCourse' type='text' placeholder='course' id='spotForm__input--3' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--4'> DATE:  </label>\r\n                            <input autoComplete='off' required onChange={handleChange} name='buyDate' type='date' placeholder='date' id='spotForm__input--4' className='spotForm__input' />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='spotForm__sell'>\r\n                        <p className='spotForm__paragraph'> selling </p>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--6'> COURSE:  </label>\r\n                            <input autoComplete='off' onChange={handleChange} name='sellCourse' type='text' placeholder='course' id='spotForm__input--6' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--7'> PROFIT:  </label>\r\n                            <input autoComplete='off' onChange={handleChange} name='profit' type='text' placeholder='profit' id='spotForm__input--7' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--8'> DATE:  </label>\r\n                            <input autoComplete='off' onChange={handleChange} name='sellDate' type='date' placeholder='date' id='spotForm__input--8' className='spotForm__input' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Button type='submit' text='APPLY' styles={{marginTop: '0rem', marginBottom: '2rem'}} />\r\n                \r\n            </form>\r\n        </div>\r\n    </div>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userSpotUpload: data => dispatch(userSpotUpload(data))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SpotAddRecordForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// UTIL FUNCTIONS\r\nimport { replaceComma, checkNumberField, calculatePercentageCourseChange } from '../../../../utils/form.funtions';\r\n// ACTIONS\r\nimport { userSpotEdit } from '../../../../redux/user/user.actions';\r\n// COMPONENTS\r\nimport Button from '../../../../components/button/Button.component';\r\nimport Close from '../../../../components/Close/Close.component';\r\n\r\nconst SpotUpdateRecordForm  = ({ theme, setSpotTableLoading, setEditData, editData, setWalletTrackerLabel, hideForm, userSpotEdit }) => {\r\n   \r\n    const { buyCurrency, buyAmount, buyCourse, buyDate, profit, sellCourse, sellDate} = editData;\r\n\r\n    \r\n    const onChange = e => {\r\n        const { name, value } = e.target;\r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    };\r\n\r\n\r\n     const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (editData.sellCourse) editData.sellCourse = replaceComma(editData.sellCourse);\r\n        if (editData.profit)  editData.profit = replaceComma(editData.profit);\r\n\r\n        editData.buyAmount = replaceComma(editData.buyAmount);\r\n        editData.buyCourse = replaceComma(editData.buyCourse);\r\n\r\n        if(checkNumberField(editData.buyAmount, editData.buyCourse, editData.sellAmount, editData.sellCourse, editData.profit)) {\r\n            return setWalletTrackerLabel({\r\n                status: true,\r\n                message: 'Provide only numbers in amount, profit and course fields. '\r\n            })\r\n        }\r\n\r\n        if (editData.buyCourse && editData.sellCourse) {\r\n            editData.percentageCourseChange = calculatePercentageCourseChange(editData.buyCourse, editData.sellCourse);\r\n        };\r\n\r\n        setSpotTableLoading();\r\n        userSpotEdit(editData);\r\n        hideForm();\r\n    };\r\n\r\n    return (\r\n    <div className={`spotForm-${theme} spotForm`}>\r\n        <div className='spotForm__container'>\r\n            <form onSubmit={handleSubmit} >\r\n                <Close onClick={hideForm} />\r\n                    <h1 className='spotForm__header'> Update record </h1>\r\n                <div className='spotForm__box'>\r\n                    <div className='spotForm__buy'>\r\n                        <p className='spotForm__paragraph'>Buying</p>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--1'> CURRENCY:  </label>\r\n                            <input autoComplete='off' onChange={onChange} defaultValue={buyCurrency} required name='buyCurrency' type='text' placeholder='currency' id='spotForm__input--1' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--2'> AMOUNT:  </label>\r\n                            <input autoComplete='off' onChange={onChange} defaultValue={buyAmount} required name='buyAmount' type='text' placeholder='amount' id='spotForm__input--2' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--3'> COURSE:  </label>\r\n                            <input autoComplete='off' onChange={onChange} defaultValue={buyCourse} required name='buyCourse' type='text' placeholder='course' id='spotForm__input--3' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--4'> DATE:  </label>\r\n                            <input autoComplete='off' onChange={onChange} defaultValue={buyDate} required name='buyDate' type='date' placeholder='date' id='spotForm__input--4' className='spotForm__input' />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='spotForm__sell'>\r\n                        <p className='spotForm__paragraph'>selling</p>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--6'> COURSE:  </label>\r\n                            <input autoComplete='off' onChange={onChange} defaultValue={sellCourse} name='sellCourse' type='text' placeholder='course' id='spotForm__input--6' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--7'> PROFIT:  </label>\r\n                            <input autoComplete='off' onChange={onChange} defaultValue={profit} name='profit' type='text' placeholder='profit' id='spotForm__input--7' className='spotForm__input' />\r\n                        </div>\r\n                        <div className='spotForm__inputBox'>\r\n                            <label htmlFor='spotForm__input--8'> DATE:  </label>\r\n                            <input autoComplete='off' onChange={onChange} defaultValue={sellDate} name='sellDate' type='date' placeholder='date' id='spotForm__input--8' className='spotForm__input' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Button text='APPLY' styles={{marginTop: '0rem', marginBottom: '2rem'}} />\r\n                \r\n            </form>\r\n        </div>\r\n    </div>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userSpotEdit: data => dispatch(userSpotEdit(data))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SpotUpdateRecordForm);","import React from 'react';\r\nimport { ReactComponent as Rocket} from '../../../../svg/rocket-outline.svg';\r\nimport { removeDolarSign } from '../../../../utils/form.funtions';\r\n\r\n\r\nconst FuturesTableRow = ({ entry, laverage, rocketsNumber, setHiddenUpdateForm, setEditData, id, typeOfFuture, contract, date, profit, style}) => {\r\n\r\n    let rockets = [];\r\n\r\n    for (let i = 0; i < rocketsNumber; i++) {\r\n        rockets.push(<Rocket key={i} className='futuresTable--rocketIcon' />)\r\n    }\r\n\r\n    const getData = e => {\r\n        let nodeArr = Array.from(e.target.parentNode.childNodes);\r\n        if (nodeArr.length < 4) nodeArr = Array.from(e.target.parentNode.parentNode.childNodes)\r\n        if (nodeArr.length < 4) nodeArr = Array.from(e.target.parentNode.parentNode.parentNode.childNodes)\r\n        if (nodeArr.length < 4) nodeArr = Array.from(e.target.parentNode.parentNode.parentNode.parentNode.childNodes)\r\n    \r\n\r\n        const arr = nodeArr.slice(1,7).map(el => el.innerHTML);\r\n        setEditData(prevStatus => ({\r\n            ...prevStatus,\r\n            objectID: id,\r\n            typeOfFuture: arr[0],\r\n            contract: arr[1],\r\n            entry: removeDolarSign(arr[2]),\r\n            laverage: arr[3],\r\n            profit: removeDolarSign(arr[4]),\r\n            date: arr[5]\r\n        }))\r\n\r\n        setHiddenUpdateForm(false);\r\n\r\n    }\r\n        \r\n    return (  \r\n    <tr style={style}>\r\n        <td> <input data-id={id} className='futuresTable__checkbox' type='checkbox'/></td>\r\n        <td style={{color: typeOfFuture === 'long' ? '#32ff7e' : '#ff3838', fontWeight: '700', fontSize: '1.1rem' }} onClick={getData} >{typeOfFuture}</td>\r\n        <td onClick={getData}>{contract}</td>\r\n        <td onClick={getData}>{entry}$</td>\r\n        <td onClick={getData}>{laverage}</td>\r\n        <td style={{color: profit >= 0 ? '#32ff7e' : '#ff3838'}} onClick={getData}>{\r\n            profit ? \r\n            `${profit}$`\r\n            :\r\n            null\r\n        }</td>\r\n        <td onClick={getData}>{date}</td>\r\n        <td onClick={getData}>\r\n        <div className='futuresTable--rocketContainer'>\r\n            {\r\n                rockets.map(el => el)\r\n            }\r\n            </div>\r\n        </td>\r\n</tr>\r\n)};\r\n\r\n\r\nexport default FuturesTableRow;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FuturesTableRow from './FuturesTableRow.component';\r\nimport Spinner from '../../../../components/Spinner/Spinner.component';\r\nimport TableHeader from '../../../../components/TableHeader/TableHeader.component';\r\n\r\nconst FuturesTable = ({ theme, averageProfit, setHiddenUpdateForm, setEditData, futures, futuresTableLoading, setNodeArr }) => {\r\n\r\n    useEffect(() => {\r\n        const checkbox = document.querySelectorAll('.futuresTable__checkbox');\r\n        setNodeArr(Array.from(checkbox))\r\n    }, [futures])\r\n\r\n    let rocketsReference = Math.round(((averageProfit + (averageProfit / 3)) / 3));\r\n\r\n    return (\r\n    <div className={`futuresTable-${theme} futuresTable`}>\r\n        <TableHeader \r\n            theme={theme} \r\n            gap={true}\r\n            headers={['Type', 'Contract', 'Entry', 'Laverage', 'Profit', 'Date', 'Rockets']} \r\n        />\r\n        \r\n        <div className='futuresTable__content'>\r\n        {\r\n            futuresTableLoading ? <Spinner /> : null\r\n        }\r\n        \r\n        <table className='futuresTable__table'>\r\n            <tbody   >\r\n                {\r\n                    futures ? \r\n                    futures.map((el, i) => <FuturesTableRow \r\n                        id={el._id}\r\n                        typeOfFuture={el.typeOfFuture}\r\n                        contract={el.contract}\r\n                        date={el.date}\r\n                        profit={el.profit}\r\n                        entry={el.entry}\r\n                        laverage={el.laverage}\r\n                        key={i}\r\n                        style={futuresTableLoading ? {display: \"none\"} : null}\r\n                        setEditData={setEditData}\r\n                        setHiddenUpdateForm={setHiddenUpdateForm}\r\n                        rocketsNumber={ Math.floor(el.profit / rocketsReference) > 3 ? 3 : Math.floor(el.profit / rocketsReference)}\r\n                        />)\r\n                    :\r\n                        null\r\n                }\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    </div>\r\n)};\r\n\r\nconst mapStateToProps = state => ({\r\n    futures: state.user.currentUser.futures,\r\n    futuresTableLoading: state.user.futuresTableLoading\r\n});\r\n\r\nexport default connect(mapStateToProps)(FuturesTable);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n// UTIL FUNCTIONS\r\nimport { replaceComma, checkNumberField } from '../../../../utils/form.funtions';\r\n// ACTIONS\r\nimport { userFutureUpload } from '../../../../redux/user/user.actions';\r\n// COMPONETNS\r\nimport Button from '../../../../components/button/Button.component';\r\nimport Close from '../../../../components/Close/Close.component';\r\n\r\nconst FuturesAddRecordForm = ({ theme, setWalletTrackerLabel, id, hideForm, userFutureUpload, setFuturesTableLoading }) => {\r\n    \r\n    const [data, setData] = useState({\r\n        id, \r\n        typeOfFuture: '',\r\n        contract: '',\r\n        profit: null,\r\n        entry: null,\r\n        laverage: null,\r\n        date: ''\r\n    });\r\n    \r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        setData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (data.profit) data.profit = replaceComma(data.profit);\r\n        if (data.entry) data.entry = replaceComma(data.entry);\r\n\r\n            data.typeOfFuture = data.typeOfFuture.toLowerCase();\r\n        if (data.typeOfFuture !== 'short' && data.typeOfFuture !== 'long') {\r\n            return setWalletTrackerLabel({\r\n                status: true,\r\n                message: 'Provide only Long or Short type.'\r\n            })\r\n        }\r\n\r\n        if (checkNumberField(data.profit, data.entry)) {\r\n            return setWalletTrackerLabel({\r\n                status: true,\r\n                message: 'Provide only numbers in profit and entry fields. '\r\n            })\r\n        }\r\n\r\n\r\n        setFuturesTableLoading();\r\n        userFutureUpload(data);\r\n        hideForm();\r\n    }\r\n    \r\n    return (\r\n    <div className={`futuresForm-${theme} futuresForm`}>\r\n        <div className='futuresForm__container'>\r\n            <form onSubmit={handleSubmit} >\r\n                <Close onClick={hideForm} />\r\n                <h1 className='futuresForm__header'>Add new record</h1>\r\n                <div className='futuresForm__box'>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__type'>TYPE: </label>\r\n                        <input onChange={handleChange} list='shortAndLong' required name='typeOfFuture' type='text' placeholder='type' id='futuresForm__type' />\r\n                    <datalist id=\"shortAndLong\">\r\n                        <option value=\"Short\" />\r\n                        <option value=\"Long\" />\r\n                    </datalist>\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__contract'>CONTRACT: </label>\r\n                        <input onChange={handleChange} type='text' name='contract' placeholder='contract' id='futuresForm__contract' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__entry'>ENTRY: </label>\r\n                        <input onChange={handleChange} name='entry' type='text' placeholder='entry' id='futuresForm__entry' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__laverage'>LAVERAGE: </label>\r\n                        <input onChange={handleChange} name='laverage' type='text' placeholder='laverage' id='futuresForm__laverage' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__profit'>PROFIT: </label>\r\n                        <input onChange={handleChange} name='profit' type='text' placeholder='profit' id='futuresForm__profit' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__date'>DATE: </label>\r\n                        <input onChange={handleChange} required name='date' type='date' placeholder='date' id='futuresForm__date' />\r\n                    </div>\r\n                    <Button type='submit' styles={{marginTop: 0}} text='APPLY' />\r\n                </div>\r\n            \r\n            </form>\r\n        </div>\r\n    </div>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userFutureUpload: data => dispatch(userFutureUpload(data))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FuturesAddRecordForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// UTIL FUNCTIONS\r\nimport { replaceComma, checkNumberField } from '../../../../utils/form.funtions';\r\n// ACTIONS\r\nimport { userFutureEdit } from '../../../../redux/user/user.actions';\r\n// COMPONETNS\r\nimport Button from '../../../../components/button/Button.component';\r\nimport Close from '../../../../components/Close/Close.component';\r\n\r\n\r\nconst FuturesUpdateRecordForm = ({ setWalletTrackerLabel, hideForm, userFutureEdit, setFuturesTableLoading, editData, setEditData }) => {\r\n\r\n    const { typeOfFuture, contract, profit, date, entry, laverage } = editData;\r\n    \r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        setEditData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (editData.profit) editData.profit = replaceComma(editData.profit);\r\n        if (editData.entry) editData.entry = replaceComma(editData.entry);\r\n\r\n            editData.typeOfFuture = editData.typeOfFuture.toLowerCase();\r\n        if (editData.typeOfFuture !== 'short' && editData.typeOfFuture !== 'long') {\r\n            return setWalletTrackerLabel({\r\n                status: true,\r\n                message: 'Provide only Long or Short type.'\r\n            })\r\n        }\r\n\r\n        if (checkNumberField(editData.profit, editData.entry)) {\r\n            return setWalletTrackerLabel({\r\n                status: true,\r\n                message: 'Provide only numbers in profit and entry fields. '\r\n            })\r\n        }\r\n\r\n        setFuturesTableLoading();\r\n        userFutureEdit(editData);\r\n        hideForm();\r\n    }\r\n    \r\n    return (\r\n    <div className='futuresForm'>\r\n        <div className='futuresForm__container'>\r\n            <form onSubmit={handleSubmit} >\r\n                <Close onClick={hideForm} />\r\n                <h1 className='futuresForm__header'>Update Record</h1>\r\n                <div className='futuresForm__box'>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__type'>TYPE: </label>\r\n                        <input defaultValue={typeOfFuture} onChange={handleChange} list='shortAndLong' required name='typeOfFuture' type='text' placeholder='type' id='futuresForm__type' />\r\n                    <datalist id=\"shortAndLong\">\r\n                        <option value=\"Short\" />\r\n                        <option value=\"Long\" />\r\n                    </datalist>\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__contract'>CONTRACT: </label>\r\n                        <input defaultValue={contract} onChange={handleChange} type='text' name='contract' placeholder='contract' id='futuresForm__contract' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__entry'>ENTRY: </label>\r\n                        <input required defaultValue={entry} onChange={handleChange} name='entry' type='text' placeholder='entry' id='futuresForm__entry' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__laverage'>LAVERAGE: </label>\r\n                        <input defaultValue={laverage} onChange={handleChange} name='laverage' type='text' placeholder='laverage' id='futuresForm__laverage' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__profit'>PROFIT: </label>\r\n                        <input defaultValue={profit} onChange={handleChange} name='profit' type='text' placeholder='profit' id='futuresForm__profit' />\r\n                    </div>\r\n                    <div className='futuresForm__inputBox'>\r\n                        <label htmlFor='futuresForm__date'>DATE: </label>\r\n                        <input defaultValue={date} onChange={handleChange} required name='date' type='date' placeholder='date' id='futuresForm__date' />\r\n                    </div>\r\n                    <Button type='submit' styles={{marginTop: 0}} text='APPLY' />\r\n                </div>\r\n            \r\n            </form>\r\n        </div>\r\n    </div>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    userFutureEdit: data => dispatch(userFutureEdit(data))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FuturesUpdateRecordForm);","import React from 'react';\r\n\r\nconst StatsTable = ({ spotData, futureData }) => (\r\n\r\n    <table className='statsTable'>\r\n         <thead>\r\n             <tr>\r\n                 <th>TITLE</th>\r\n                 <th>SPOT</th>\r\n                 <th>FUTURES</th>\r\n             </tr>\r\n         </thead>\r\n\r\n        <tbody>\r\n            <tr>\r\n                <td className='statsTable--title'>Average profit per one transaction:</td>\r\n                <td>{spotData.averageProfitPerOneTransaction}$</td>\r\n                <td>{futureData.averageProfitPerOneTransaction}$</td>\r\n            </tr>\r\n            <tr>\r\n                <td className='statsTable--title'>highest profit:</td>\r\n                <td>{spotData.highestProfit}$</td>\r\n                <td>{futureData.highestProfit}$</td>\r\n            </tr>\r\n            <tr>\r\n                <td className='statsTable--title'>lowest profit:</td>\r\n                <td>{spotData.lowestProfit}$</td>\r\n                <td>{futureData.lowestProfit}$</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td className='statsTable--title'>first Trade:</td>\r\n                <td>{spotData.firstTrade}</td>\r\n                <td>{futureData.firstTrade}</td>\r\n            </tr>\r\n            <tr>\r\n                <td className='statsTable--title'>last trade:</td>\r\n                <td>{spotData.lastTrade}</td>\r\n                <td>{futureData.lastTrade}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td className='statsTable--title'>Average moves per month:</td>\r\n                <td>{spotData.averageTransactionsPerMonth}</td>\r\n                <td>{futureData.averageTransactionsPerMonth}</td>\r\n            </tr>\r\n            <tr>\r\n                <td className='statsTable--title'>Highest amount of moves per month:</td>\r\n                <td>{spotData.highestTransactionsAmountInMonth}</td>\r\n                <td>{futureData.highestTransactionsAmountInMonth}</td>\r\n            </tr>\r\n            <tr>\r\n                <td className='statsTable--title'>Highest amount of moves in month:</td>\r\n                <td>{spotData.highestTransactionsDate}</td>\r\n                <td>{futureData.highestTransactionsDate}</td>\r\n            </tr>\r\n            <tr>\r\n                <td className='statsTable--title'>The best month:</td>\r\n                <td>{spotData.bestMonth}</td>\r\n                <td>{futureData.bestMonth}</td>\r\n            </tr>\r\n            <tr>\r\n                <td className='statsTable--title'>The worste month:</td>\r\n                <td>{spotData.worstMonth}</td>\r\n                <td>{futureData.worstMonth}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n)\r\n\r\nexport default StatsTable;","import React from 'react';\r\nimport LineChart from '../../../components/LineChart/LineChart.component';\r\n\r\n// type toggle between efficiency and values\r\nconst ChartContainer = ({ data, text, color, type }) => (\r\n    <div className='chartContainer'>\r\n        {\r\n            data ?\r\n            <LineChart tickMark={type ? '$' : '%'} header={ type ? 'monthly profits' : 'efficiency'} width={300} height={300} times={type ? data.profitTimes : data.efficiencyTimes} values={type ? data.profitValues : data.efficiencyValues} chartColor={color} />\r\n            :\r\n            <h1 className='chartContainer__alternativeText'> { text } </h1>\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default ChartContainer;","import React from 'react';\r\n\r\nconst StatisticCard = ({ data, header, dolar, type }) => (\r\n    <div className='statisticCard'>\r\n        <div className='statisticCard__container'>\r\n            <div style={{backgroundColor: data >= 0 ? '#32ff7e' : '#ff3838'}} className='statisticCard__header'>\r\n                <h1>{header}</h1>\r\n                <p>{type}</p>\r\n            </div>\r\n            {\r\n                data ? <h2> {data}{dolar ? '$'  : null} </h2>\r\n                : <h2> - </h2>\r\n            }                    \r\n        </div>   \r\n    </div>\r\n);\r\n\r\nexport default React.memo(StatisticCard);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// SPOT IMPORTS\r\nimport SpotTable from './Spot/Table/SpotTable.component';\r\nimport SpotAddRecordForm from './Spot/Form/SpotAddRecordForm.component';\r\nimport SpotUpdateRecordForm from './Spot/Form/SpotUpdateRecordForm.component';\r\n// FUTURES IMPORTS\r\nimport FuturesTable from './Futures/Table/FuturesTable.component';\r\nimport FuturesAddRecordForm from './Futures/Form/FuturesAddRecordForm.component';\r\nimport FuturesUpdateRecordForm from './Futures/Form/FuturesUpdateRecordForm.component';\r\n\r\n// STATS TABLE IMPORT\r\nimport StatsTable from './StatsTable/StatsTable.component'; \r\n\r\nimport ChartContainer from './ChartContainer/ChartContainer.component';\r\nimport Button from '../../components/button/Button.component';\r\nimport Label from '../../components/Label/Label.component';\r\nimport StatisticCard from './StatisticCard/StatisticCard.component';\r\nimport { setWalletTrackerLabel } from '../../redux/error/error.actions';\r\nimport { userSpotDelete, setSpotTableLoading, userFutureDelete, setFuturesTableLoading } from '../../redux/user/user.actions';\r\n\r\n\r\nconst WalletTrackerPage = ({ theme, futureData, spotData, setFuturesTableLoading, userFutureDelete, setWalletTrackerLabel, label, id, userSpotDelete, setSpotTableLoading }) => {\r\n    \r\n\r\n\r\n    const [spotUploadForm, setSpotUploadForm] = useState(true);\r\n    const [spotUpdateForm, setSpotUpdateForm] = useState(true);\r\n    const [futuresUploadForm, setFuturesUploadForm] = useState(true);\r\n    const [futuresUpdateForm, setFuturesUpdateForm] = useState(true);\r\n\r\n\r\n    const [nodeArrTransactions, setNodeArrTransactions] = useState([]);\r\n    const [nodeArrFutures, setNodeArrFutures] = useState([]);\r\n    const [editTransactionData, setEditTransactionData] = useState({\r\n        id,\r\n        objectID: null,\r\n        buyCurrency: '',\r\n        buyAmount: null,\r\n        buyCourse: null,\r\n        buyDate: null,\r\n        profit: null,\r\n        sellAmount: null,\r\n        sellCourse: null,\r\n        sellDate: null        \r\n    });\r\n\r\n    const [editFutureData, setEditFutureData] = useState({\r\n        id,\r\n        objectID: null,\r\n        typeOfFuture: '',\r\n        contract: '' ,\r\n        profit: '',\r\n        date: ''     \r\n    });\r\n\r\n    const deleteRecordsTransactions = () => {\r\n        const deleteArr = nodeArrTransactions.filter(el => el.checked === true).map(el => el.dataset.id);\r\n        if (deleteArr.length === 0) return;\r\n        nodeArrTransactions.forEach(el => el.checked = false);\r\n        setSpotTableLoading();\r\n        userSpotDelete({\r\n            id,\r\n            records: deleteArr\r\n        })\r\n    }\r\n\r\n    const deleteRecordsFutures = () => {\r\n        const deleteArr = nodeArrFutures.filter(el => el.checked === true).map(el => el.dataset.id);\r\n        if (deleteArr.length === 0) return;\r\n        nodeArrFutures.forEach(el => el.checked = false);\r\n        \r\n        setFuturesTableLoading();\r\n        userFutureDelete({\r\n            id,\r\n            records: deleteArr\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n    \r\n    <div className={`walletTracker-${theme} walletTracker`}>\r\n    {\r\n        label.status ? <Label status='error' message={label.message} hideLabel={() => setWalletTrackerLabel({status : false, message: ''})} /> : null\r\n    }\r\n    {\r\n        spotUploadForm ? null :  <SpotAddRecordForm theme={theme} setSpotTableLoading={setSpotTableLoading} id={id} setWalletTrackerLabel={setWalletTrackerLabel} hideForm={() => setSpotUploadForm(true)} />\r\n    }\r\n    {\r\n        spotUpdateForm ? null : <SpotUpdateRecordForm theme={theme} setSpotTableLoading={setSpotTableLoading} editData={editTransactionData} setEditData={setEditTransactionData} setWalletTrackerLabel={setWalletTrackerLabel} hideForm={() => setSpotUpdateForm(true)} />\r\n    }\r\n    \r\n    {\r\n        futuresUpdateForm ? null : <FuturesUpdateRecordForm theme={theme} setWalletTrackerLabel={setWalletTrackerLabel} setFuturesTableLoading={setFuturesTableLoading} editData={editFutureData} setEditData={setEditFutureData} hideForm={() => setFuturesUpdateForm(true)} />\r\n    }\r\n\r\n    {\r\n       futuresUploadForm ? null :  <FuturesAddRecordForm theme={theme} setWalletTrackerLabel={setWalletTrackerLabel} setFuturesTableLoading={setFuturesTableLoading} id={id} hideForm={() => setFuturesUploadForm(true)} />\r\n    }\r\n        <div className='walletTracker__spotAndFutures'> \r\n           \r\n                <div className='walletTracker__wrapper'>\r\n                    <div className='walletTracker__table--header'>\r\n                        <div className='walletTracker__table--buttons'>\r\n                            <Button styles={{marginTop: '0'}} text='Add new record' onClick={() => setSpotUploadForm(false)} />\r\n                            <Button onClick={deleteRecordsTransactions} styles={{marginTop: '0'}} text='Delete record' />\r\n                        </div>\r\n                        <h1 className='walletTracker__table--text'> SPOT </h1>\r\n\r\n                    </div>\r\n                    <SpotTable theme={theme} averageProfit={spotData.averageProfitPerOneTransaction} setEditData={setEditTransactionData} setHiddenUpdateForm={setSpotUpdateForm} setNodeArr={setNodeArrTransactions} />\r\n\r\n                </div>\r\n\r\n                <div className='walletTracker__wrapper'>\r\n                    <div className='walletTracker__table--header'>\r\n                        <div className='walletTracker__table--buttons'>\r\n                            <Button styles={{marginTop: '0'}} text='Add new record' onClick={() => setFuturesUploadForm(false)} />\r\n                            <Button onClick={deleteRecordsFutures} styles={{marginTop: '0'}} text='Delete record' />\r\n                        </div>\r\n                        <h1 className='walletTracker__table--text'> FUTURES </h1>\r\n\r\n                    </div>\r\n                        <FuturesTable theme={theme} averageProfit={futureData.averageProfitPerOneTransaction} setHiddenUpdateForm={setFuturesUpdateForm} setEditData={setEditFutureData} setNodeArr={setNodeArrFutures} />\r\n                </div>\r\n        </div>\r\n\r\n            <div className='walletTracker__cards'>   \r\n                    <div className='walletTracker__cards--wrapper'>\r\n                        <StatisticCard type='transactions' header='Total Profit' dolar={true} data={spotData.totalProfit ? spotData.totalProfit : null} />\r\n                        <StatisticCard type='transactions' header='total transactions' dolar={false} data={spotData.totalTransactionsAmount ? spotData.totalTransactionsAmount : null} />  \r\n                    </div>\r\n                    <div className='walletTracker__cards--wrapper'>\r\n                        <StatisticCard type='futures' header='Total Profit' dolar={true} data={futureData.totalProfit ? futureData.totalProfit : null} />\r\n                        <StatisticCard type='futures' header='total transactions' dolar={false} data={futureData.totalTransactionsAmount ? futureData.totalTransactionsAmount : null} /> \r\n                    </div>\r\n                    </div>\r\n        \r\n\r\n        <div className='walletTracker__statsAndCharts'>\r\n            \r\n            <div className='walletTracker__charts'>\r\n                <div className='walletTracker__charts--wrapper'>\r\n                    <h1 className='walletTracker__charts--header'> Spot </h1>\r\n                    <div className='walletTracker__charts--box'>\r\n                        <ChartContainer data={spotData.monthlyProfitChartdata} text='Add some spot transactions to see chart' color='#f39c12' type={1} />\r\n                        <ChartContainer data={spotData.monthlyProfitChartdata} text='Add some spot transactions to see chart'  color='#7ed6df' type={0} />\r\n                    </div>\r\n                </div>\r\n                <div className='walletTracker__charts--wrapper'>\r\n                    <h1 className='walletTracker__charts--header'> Futures </h1>\r\n                    <div className='walletTracker__charts--box'>\r\n                        <ChartContainer data={futureData.monthlyProfitChartdata} text='Add some spot transactions to see chart' color='#f39c12' type={1} />\r\n                        <ChartContainer data={futureData.monthlyProfitChartdata} text='Add some spot transactions to see chart'  color='#7ed6df' type={0} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='walletTracker__stats'>\r\n                <h1 className='walletTracker__stats--header'> STATS </h1>\r\n                <StatsTable spotData={spotData} futureData={futureData} />\r\n\r\n\r\n                <div className='walletTracker__stats--card'>\r\n                    <div className='walletTracker__stats--circle'></div>\r\n                    <div className={`walletTracker__stats--cardContainer-${theme} walletTracker__stats--cardContainer`}>\r\n                        <p>Cash Flow: {spotData.cashFlow + futureData.cashFlow}$ </p>\r\n                        <p>Total profit: {spotData.totalProfit + futureData.totalProfit}$</p>\r\n                        \r\n                             \r\n                            <p>Every dolar invested in futures <br></br> makes you\r\n                            {\r\n                                futureData.totalProfit && futureData.cashFlow ?\r\n                               ` ${(Math.round(futureData.totalProfit / futureData.cashFlow*100)) / 100}$ ` \r\n                               : ' 0$ '\r\n                            }    \r\n                            richer </p>\r\n                        \r\n                            <p>Every dolar invested in transactions <br></br> makes you\r\n                            {\r\n                                spotData.totalProfit && spotData.cashFlow ?\r\n                               ` ${(Math.round(spotData.totalProfit / spotData.cashFlow*100)) / 100}$ ` \r\n                               : ' 0$ '\r\n                            }    \r\n                            richer </p>\r\n                        </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            </div>\r\n        \r\n    </div>\r\n)}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setWalletTrackerLabel: data => dispatch(setWalletTrackerLabel(data)),\r\n    userSpotDelete: data => dispatch(userSpotDelete(data)),\r\n    setSpotTableLoading: () => dispatch(setSpotTableLoading()),\r\n    setFuturesTableLoading: () => dispatch(setFuturesTableLoading()),\r\n    userFutureDelete: data => dispatch(userFutureDelete(data))\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    label: state.error.walletTrackerLabel,\r\n    id: state.user.currentUser._id,\r\n    spotData: state.user.walletTrackerTransactionData,\r\n    futureData: state.user.walletTrackerFuturesData,\r\n    theme: state.user.theme\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletTrackerPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Button = ({theme, onClick, text, styles}) => (\r\n    <button style={styles} onClick={onClick} className={`button-${theme} button`}> {text} </button>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    theme: state.user.theme\r\n});\r\n\r\nexport default connect(mapStateToProps)(Button);","\r\nexport const checkTradeType = (typeOfTrade) => {\r\n    const tradeTypes = ['Trade', 'Deposit', 'Withdrawal', 'Mining', 'Other'];\r\n\r\n    if(!tradeTypes.some(el => el === typeOfTrade)) {\r\n\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const sliceComment = (comment) => {\r\n        comment = comment.split(' ').map(el => {\r\n        if (el.length > 20) {\r\n            const maxCharactersInOneLine = 15;\r\n            const workArr = [];\r\n            const count = Math.ceil(el.length / maxCharactersInOneLine);\r\n            for (let i = 0; i < count; i++) {\r\n                i + 1 === count ?\r\n                workArr.push(el.slice(i*maxCharactersInOneLine, (i+1)*maxCharactersInOneLine)) :\r\n                workArr.push(el.slice(i*maxCharactersInOneLine, (i+1)*maxCharactersInOneLine) + ' ');\r\n            }\r\n            return workArr.join('')\r\n        }\r\n        return el;\r\n    }).join(' ');\r\n\r\n    return comment;\r\n};\r\n\r\nexport const replaceComma = data => {\r\n        return data.replace(',','.');\r\n};\r\n\r\nexport const checkNumberField = (...data) => {\r\n    const res = data.some(el => isNaN(el));\r\n    return res;\r\n};\r\n\r\nexport const removeDolarSign = data => {\r\n    const res = data.replace(/\\$/g, '');\r\n    return res;\r\n};\r\n\r\nexport const calculatePercentageCourseChange = (buyCourse, sellCourse) => {\r\n     return (Math.round(((sellCourse / buyCourse)*100 - 100)*100)) / 100\r\n};","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseOutline(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"ionicon\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Close\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 32,\n    d: \"M368 368L144 144M368 144L144 368\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseOutline);\nexport default __webpack_public_path__ + \"static/media/close-outline.a22b61b1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { ReactComponent as CloseIcon} from '../../svg/close-outline.svg';\r\n\r\nconst Close = ({ onClick }) => (\r\n    <div className='close'>\r\n        <CloseIcon className='close--icon' onClick={onClick} />\r\n    </div>\r\n); \r\n\r\nexport default Close;","import React from 'react';\r\nimport {Line, defaults} from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LineChart = ({ theme, tickMark, beginAtZero, times, values, header, chartColor, height  }) => {\r\n    let themeChartColor;\r\n    let themeTicksColor;\r\n    let themeBorderColor;\r\n    let headerColor;\r\n    switch(theme) {\r\n        case 'light':\r\n            themeChartColor = '#b217ff';\r\n            themeTicksColor = '#b217ff';\r\n            themeBorderColor = '#b217ff3f';\r\n            headerColor = '#b217ff';\r\n            break;\r\n        case 'matrix' :\r\n            themeChartColor = '#32ff7e';\r\n            themeTicksColor = '#32ff7e';\r\n            themeBorderColor = '#32ff7d46';\r\n            headerColor = '#32ff7e';  \r\n            break;\r\n        default:\r\n            themeChartColor = chartColor;\r\n            themeTicksColor = 'rgba(255,255,255, 0.5)';\r\n            themeBorderColor = 'rgba(255,255,255, 0.03)' ;\r\n            headerColor = '#ffffff';\r\n            break;\r\n    }\r\n        \r\n\r\n    defaults.borderColor = themeBorderColor;\r\n    defaults.elements.point.pointStyle = 'star';\r\n    defaults.color = 'rgba(255,255,255, 0.5)';\r\n    defaults.plugins.legend.display = false\r\n    \r\n    \r\n\r\nreturn (\r\n    <div className='lineChart'>\r\n    <h1 style={{color: headerColor}} className='lineChart__header'>{header}</h1>\r\n    <Line \r\n        data={{\r\n            labels: times,\r\n            datasets: [{\r\n                pointBackgroundColor: themeChartColor,\r\n                data: values,\r\n               //  backgroundColor: '#f1c40f8a',\r\n                borderColor: themeChartColor,\r\n                borderWidth: 2,\r\n               //  fill: true,\r\n                tension: 0.3,\r\n    \r\n            }]\r\n        }}\r\n        options={{\r\n            responsive: true,\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: themeTicksColor\r\n                    }\r\n                },\r\n                y: {\r\n                    beginAtZero: beginAtZero ? true : false,\r\n                    ticks: {\r\n                        \r\n                        callback: function(value, index, values) {\r\n                            return (Math.round(value*100) / 100) + tickMark\r\n                        },\r\n                        color: themeTicksColor,\r\n                        \r\n                    }\r\n                }\r\n            }\r\n        }}\r\n        height={height}\r\n        width={300}\r\n    />\r\n    </div>\r\n)};\r\n\r\nconst mapStateToProps = state => ({\r\n    theme: state.user.theme\r\n})\r\n\r\nexport default connect(mapStateToProps)(React.memo(LineChart));","import React from 'react';\r\nimport { ReactComponent as Close} from '../../svg/close-outline.svg';\r\n\r\nconst Label = ({status, message, hideLabel}) => {\r\n    \r\n    return <div className={`label label__${status}`}>\r\n    <div  className='close'>\r\n                <Close onClick={hideLabel} style={{margin: '.2rem'}} className='close--icon' />\r\n            </div>\r\n    <p className='label__text'> { message } </p> </div>\r\n};\r\n\r\nexport default Label;"],"sourceRoot":""}