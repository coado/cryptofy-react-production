{"version":3,"sources":["pages/HomePage/HomePage.component.jsx","components/LineChart/LineChart.component.jsx"],"names":["HomePage","times","Array","fill","className","alt","src","to","tickMark","height","values","chartColor","LineChart","themeChartColor","themeTicksColor","themeBorderColor","headerColor","theme","beginAtZero","header","defaults","borderColor","elements","point","pointStyle","color","plugins","legend","display","style","data","labels","datasets","pointBackgroundColor","borderWidth","tension","options","responsive","scales","x","ticks","y","callback","value","index","Math","round","width","connect","state","user","React","memo"],"mappings":"kGAAA,uCA2CeA,UAvCE,WAEb,IAAIC,EAAQ,IAAIC,MAAM,IAAIC,KAAK,IAI/B,OACA,qBAAKC,UAAU,WAAf,SAEI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,kBAAd,wBACA,qBAAKA,UAAU,iCAAf,SACI,qBAAKC,IAAI,QAAQC,IAAI,6BAI7B,oBAAIF,UAAU,mBAAd,8DAGA,cAAC,IAAD,CAAMG,GAAG,gBAAT,SAA0B,wBAAQH,UAAU,mBAAlB,4BAG9B,qBAAKA,UAAU,2BAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,yBAAf,SACI,cAAC,IAAD,CAAWI,SAAS,IAAIC,OAAQ,IAAKR,MAAOA,EAAOS,OAvB1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAuBZC,WAAW,yB,gCC/BtG,4CAIMC,EAAY,SAAC,GAAkF,IAC7FC,EACAC,EACAC,EACAC,EAJaC,EAA+E,EAA/EA,MAAOT,EAAwE,EAAxEA,SAAUU,EAA8D,EAA9DA,YAAajB,EAAiD,EAAjDA,MAAOS,EAA0C,EAA1CA,OAAQS,EAAkC,EAAlCA,OAAQR,EAA0B,EAA1BA,WAAYF,EAAc,EAAdA,OAKlF,OAAOQ,GACH,IAAK,QACDJ,EAAkB,UAClBC,EAAkB,UAClBC,EAAmB,YACnBC,EAAc,UACd,MACJ,IAAK,SACDH,EAAkB,UAClBC,EAAkB,UAClBC,EAAmB,YACnBC,EAAc,UACd,MACJ,QACIH,EAAkBF,EAClBG,EAAkB,yBAClBC,EAAmB,0BACnBC,EAAc,UAY1B,OAPII,IAASC,YAAcN,EACvBK,IAASE,SAASC,MAAMC,WAAa,OACrCJ,IAASK,MAAQ,yBACjBL,IAASM,QAAQC,OAAOC,SAAU,EAKlC,sBAAKxB,UAAU,YAAf,UACA,oBAAIyB,MAAO,CAACJ,MAAOT,GAAcZ,UAAU,oBAA3C,SAAgEe,IAChE,cAAC,IAAD,CACIW,KAAM,CACFC,OAAQ9B,EACR+B,SAAU,CAAC,CACPC,qBAAsBpB,EACtBiB,KAAMpB,EAENW,YAAaR,EACbqB,YAAa,EAEbC,QAAS,MAIjBC,QAAS,CACLC,YAAY,EACZC,OAAQ,CACJC,EAAG,CACCC,MAAO,CACHf,MAAOX,IAGf2B,EAAG,CACCvB,cAAaA,EACbsB,MAAO,CAEHE,SAAU,SAASC,EAAOC,EAAOlC,GAC7B,OAAQmC,KAAKC,MAAY,IAANH,GAAa,IAAOnC,GAE3CiB,MAAOX,MAMvBL,OAAQA,EACRsC,MAAO,UASAC,iBAJS,SAAAC,GAAK,MAAK,CAC9BhC,MAAOgC,EAAMC,KAAKjC,SAGP+B,CAAyBG,IAAMC,KAAKxC","file":"static/js/8.4618dde2.chunk.js","sourcesContent":["import React from 'react';\r\nimport LineChart from '../../components/LineChart/LineChart.component';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HomePage = () => {\r\n    \r\n    let times = new Array(24).fill('')\r\n\r\n    let values = [0, 1, 2, 3, 4, 8, 10, 15, 30, 19, 10, 20, 40, 20, 45, 14, 15, 9, 12, 30, 40, 50, 60, 100]\r\n    \r\n    return (\r\n    <div className='Homepage'>\r\n\r\n        <div className='Homepage__wrapper'>\r\n            <div className='Homepage__textContainer'>\r\n                <div className='Homepage__header'>\r\n                    <h1 className='Homepage__title'> Cryptofy </h1>\r\n                    <div className='Homepage__header--imageWrapper'>\r\n                        <img alt='ether' src='../images/ether.png' />\r\n                    </div>\r\n                </div>\r\n\r\n                <h1 className='Homepage__slogan'>Cryptocurrency wallet tracking tool for traders </h1> \r\n\r\n\r\n                <Link to='/signUpSignIn' ><button className='Homepage__button' > Sign up </button></Link>\r\n\r\n            </div>\r\n            <div className='Homepage__chartContainer'>\r\n                <div className='Homepage__chart'>\r\n                    <div className='Homepage__chartWrapper'>\r\n                        <LineChart tickMark='%' height={180} times={times} values={values} chartColor='#32ff7e'  />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        {\r\n            // <div>Icons made by <a href=\"https://www.flaticon.com/authors/eucalyp\" title=\"Eucalyp\">Eucalyp</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div> \r\n        }\r\n    </div>\r\n)};\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport {Line, defaults} from 'react-chartjs-2';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LineChart = ({ theme, tickMark, beginAtZero, times, values, header, chartColor, height  }) => {\r\n    let themeChartColor;\r\n    let themeTicksColor;\r\n    let themeBorderColor;\r\n    let headerColor;\r\n    switch(theme) {\r\n        case 'light':\r\n            themeChartColor = '#b217ff';\r\n            themeTicksColor = '#b217ff';\r\n            themeBorderColor = '#b217ff3f';\r\n            headerColor = '#b217ff';\r\n            break;\r\n        case 'matrix' :\r\n            themeChartColor = '#32ff7e';\r\n            themeTicksColor = '#32ff7e';\r\n            themeBorderColor = '#32ff7d46';\r\n            headerColor = '#32ff7e';  \r\n            break;\r\n        default:\r\n            themeChartColor = chartColor;\r\n            themeTicksColor = 'rgba(255,255,255, 0.5)';\r\n            themeBorderColor = 'rgba(255,255,255, 0.03)' ;\r\n            headerColor = '#ffffff';\r\n            break;\r\n    }\r\n        \r\n\r\n    defaults.borderColor = themeBorderColor;\r\n    defaults.elements.point.pointStyle = 'star';\r\n    defaults.color = 'rgba(255,255,255, 0.5)';\r\n    defaults.plugins.legend.display = false\r\n    \r\n    \r\n\r\nreturn (\r\n    <div className='lineChart'>\r\n    <h1 style={{color: headerColor}} className='lineChart__header'>{header}</h1>\r\n    <Line \r\n        data={{\r\n            labels: times,\r\n            datasets: [{\r\n                pointBackgroundColor: themeChartColor,\r\n                data: values,\r\n               //  backgroundColor: '#f1c40f8a',\r\n                borderColor: themeChartColor,\r\n                borderWidth: 2,\r\n               //  fill: true,\r\n                tension: 0.3,\r\n    \r\n            }]\r\n        }}\r\n        options={{\r\n            responsive: true,\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: themeTicksColor\r\n                    }\r\n                },\r\n                y: {\r\n                    beginAtZero: beginAtZero ? true : false,\r\n                    ticks: {\r\n                        \r\n                        callback: function(value, index, values) {\r\n                            return (Math.round(value*100) / 100) + tickMark\r\n                        },\r\n                        color: themeTicksColor,\r\n                        \r\n                    }\r\n                }\r\n            }\r\n        }}\r\n        height={height}\r\n        width={300}\r\n    />\r\n    </div>\r\n)};\r\n\r\nconst mapStateToProps = state => ({\r\n    theme: state.user.theme\r\n})\r\n\r\nexport default connect(mapStateToProps)(React.memo(LineChart));"],"sourceRoot":""}